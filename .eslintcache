[{"C:\\psychology\\src\\index.js":"1","C:\\psychology\\src\\App.js":"2","C:\\psychology\\src\\reducers\\index.js":"3","C:\\psychology\\src\\reducers\\login.js":"4","C:\\psychology\\src\\reducers\\admin.js":"5","C:\\psychology\\src\\actions\\ActionTypes.js":"6","C:\\psychology\\src\\root.js":"7","C:\\psychology\\src\\components\\main.js":"8","C:\\psychology\\src\\components\\login.js":"9","C:\\psychology\\src\\components\\header.js":"10","C:\\psychology\\src\\components\\public_room_list.js":"11","C:\\psychology\\src\\components\\generate_room.js":"12","C:\\psychology\\src\\actions\\index.js":"13","C:\\psychology\\src\\components\\game_ready.js":"14","C:\\psychology\\src\\components\\public_room.js":"15","C:\\psychology\\src\\components\\game_container.js":"16","C:\\psychology\\src\\components\\moving_dots\\moving_dots.js":"17","C:\\psychology\\src\\reducers\\game.js":"18","C:\\psychology\\src\\components\\common\\timer.js":"19","C:\\psychology\\src\\components\\treasure_ship\\treasure_ship.js":"20","C:\\psychology\\src\\components\\treasure_ship\\ship_wreck.js":"21","C:\\psychology\\src\\components\\hero\\hero.js":"22"},{"size":471,"mtime":1610882389621,"results":"23","hashOfConfig":"24"},{"size":1695,"mtime":1611917905614,"results":"25","hashOfConfig":"24"},{"size":248,"mtime":1611508772868,"results":"26","hashOfConfig":"24"},{"size":627,"mtime":1610883829728,"results":"27","hashOfConfig":"24"},{"size":599,"mtime":1610882213126,"results":"28","hashOfConfig":"24"},{"size":313,"mtime":1611508452012,"results":"29","hashOfConfig":"24"},{"size":207,"mtime":1611053725291,"results":"30","hashOfConfig":"24"},{"size":2090,"mtime":1611917934314,"results":"31","hashOfConfig":"24"},{"size":1147,"mtime":1611124658628,"results":"32","hashOfConfig":"24"},{"size":839,"mtime":1610901847660,"results":"33","hashOfConfig":"24"},{"size":2196,"mtime":1611945890851,"results":"34","hashOfConfig":"24"},{"size":3571,"mtime":1611944510464,"results":"35","hashOfConfig":"24"},{"size":911,"mtime":1611925989652,"results":"36","hashOfConfig":"24"},{"size":6544,"mtime":1611945241215,"results":"37","hashOfConfig":"24"},{"size":801,"mtime":1611937680104,"results":"38","hashOfConfig":"24"},{"size":1175,"mtime":1611926530587,"results":"39","hashOfConfig":"24"},{"size":8065,"mtime":1611752567717,"results":"40","hashOfConfig":"24"},{"size":710,"mtime":1611925965195,"results":"41","hashOfConfig":"24"},{"size":1896,"mtime":1611687245040,"results":"42","hashOfConfig":"24"},{"size":412,"mtime":1611919201096,"results":"43","hashOfConfig":"24"},{"size":3233,"mtime":1611902683078,"results":"44","hashOfConfig":"24"},{"size":785,"mtime":1611926388776,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"8u2c1",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"48"},"C:\\psychology\\src\\index.js",[],["105","106"],"C:\\psychology\\src\\App.js",["107","108"],"import React, {Component} from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Main from './components/main';\r\nimport Header from './components/header';\r\nimport Login from './components/login';\r\nimport Public_room_list from './components/public_room_list';\r\nimport Generate_room from './components/generate_room';\r\nimport Game_ready from './components/game_ready';\r\n\r\nimport Moving_dots from './components/moving_dots/moving_dots';\r\n\r\nimport Treasure_ship from './components/treasure_ship/treasure_ship';\r\n\r\nimport Hero from './components/hero/hero';\r\n\r\nclass App extends Component{\r\n  render(){\r\n    const mobile = window.innerWidth<768;\r\n    return (\r\n        <div className=\"App\">\r\n          {this.props.game_started ? <></> : <Header/>}\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Main}/>\r\n            <Route exact path=\"/ranking\" component={Main}/>\r\n            <Route exact path=\"/login\" component={Login}/>\r\n            <Route exact path=\"/public_room_list\" component={Public_room_list}/>\r\n            <Route exact path=\"/generate_room\" component={Generate_room}/>\r\n            <Route path=\"/game_ready/:roomID\" component={Game_ready}/>\r\n\r\n            <Route exact path=\"/moving_dots\" component={Moving_dots}/>\r\n\r\n            <Route exact path=\"/treasure_ship\" component={Treasure_ship}/>\r\n\r\n            <Route exact path=\"/hero\" component={Hero}/>\r\n          </Switch>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user_info : state.login.user_info,\r\n    game_started : state.game.game_started,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","C:\\psychology\\src\\reducers\\index.js",[],"C:\\psychology\\src\\reducers\\login.js",[],"C:\\psychology\\src\\reducers\\admin.js",[],"C:\\psychology\\src\\actions\\ActionTypes.js",[],"C:\\psychology\\src\\root.js",[],"C:\\psychology\\src\\components\\main.js",["109","110","111","112","113","114","115","116"],"import React, {Component} from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport './css/main.css';\r\nimport Generate_room from './generate_room';\r\nimport Game_container from './game_container';\r\n\r\nclass Main extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n  onChange = e=>{\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    });\r\n  }\r\n  onClick1 = ()=>{\r\n    this.setState({\r\n      making_mode : !this.state.making_mode,\r\n    });\r\n  }\r\n  render(){\r\n    return(\r\n      <div className='main'>\r\n        <div className=\"menu\">\r\n          <button className={this.state.making_mode ? 'cancle' : ''}\r\n            onClick={this.onClick1}>\r\n            {this.state.making_mode ? '취소' : '방 만들기'}\r\n          </button>\r\n          <Link to=\"/public_room_list\">공개방 참여</Link>\r\n          <button>코드로 참여</button>\r\n          {this.state.making_mode ? <Generate_room history1={this.props.history}/> : <></>}\r\n        </div>\r\n        <div className=\"games\">\r\n          <Game_container history={this.props.history} link={\"/moving_dots\"} name={\"동전 던지기 (1인)\"} center={false}/>\r\n          <Game_container history={this.props.history} link={\"/moving_dots\"} name={\"점 움직이기 (1인)\"} center={true}/>\r\n          <Game_container history={this.props.history} link={\"/moving_dots\"} name={\"죄수의 딜레마 (2인)\"} center={false}/>\r\n          <Game_container history={this.props.history} link={\"/hero\"} name={\"외로운 영웅 (3~20인)\"} center={false}/>\r\n          <Game_container history={this.props.history} link={\"/treasure_ship\"} name={\"보물선 (3~20인)\"} center={true}/>\r\n          <Game_container history={this.props.history} link={\"/moving_dots\"} name={\"거꾸로 경매 (3~20인)\"} center={false}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    is_logined : state.login.is_logined,\r\n    user_info : state.login.user_info,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","C:\\psychology\\src\\components\\login.js",["117","118"],"import React, {Component} from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport './css/login.css';\r\n\r\nclass Login extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n  onChange = e=>{\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n  onClick1 = ()=>{\r\n    this.props.handleSuccess({name : this.state.name});\r\n    //window.location.replace('/');\r\n  }\r\n  render(){\r\n    return(\r\n      <div className='login'>\r\n        <input type=\"text\" name=\"name\" onChange={this.onChange} placeholder=\"ID\"/>\r\n        <button onClick={this.onClick1}>로그인</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    is_logined : state.login.is_logined,\r\n    user_info : state.login.user_info,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  //return bindActionCreators(actions, dispatch);\r\n  return{\r\n    handleSuccess : (info)=>{dispatch(actions.login_success(info))},\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\psychology\\src\\components\\header.js",["119"],"import React, {Component} from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport './css/header.css';\r\n\r\nclass Header extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n      <div className='header'>\r\n        <Link to=\"/\">심리게임 실험 플랫폼</Link>\r\n        <div>\r\n          <Link to=\"/ranking\">랭킹</Link>\r\n          {this.props.is_logined ?\r\n            <span>{this.props.user_info.name}님 어서오세요</span>\r\n            : <Link to=\"/login\">Login</Link>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    is_logined : state.login.is_logined,\r\n    user_info : state.login.user_info,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","C:\\psychology\\src\\components\\public_room_list.js",["120","121","122","123"],"C:\\psychology\\src\\components\\generate_room.js",["124","125"],"import React, {Component} from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport './css/generate_room.css';\r\nimport socketIOClient from 'socket.io-client';\r\nvar socket = socketIOClient();\r\nconst crypto = require(\"crypto\");\r\n\r\nclass Generate_room extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isPublic : true,\r\n      name : \"죄수의 딜레마\",\r\n      max_number : 3,\r\n    }\r\n  }\r\n  onChange = e=>{\r\n    this.setState({\r\n      [e.target.name] : e.target.value,\r\n    });\r\n  }\r\n  onClick1 = ()=>{\r\n    socket.emit('generate room', null);\r\n    var roomID = crypto.randomBytes(10).toString('hex');\r\n    const room = {\r\n      roomID : roomID,\r\n      isPublic : this.state.isPublic,\r\n      gameName : this.state.name,\r\n      maxNumber : this.state.max_number,\r\n      roomOwner : this.props.user_info.name,\r\n      userList : [{userID : this.props.user_info.name}],\r\n    }\r\n    fetch('/room', {\r\n        method :\"POST\",\r\n        headers:{\r\n          'content-type':'application/json'\r\n        },\r\n        body:JSON.stringify(room)    // post객체를 작성한 주소로 post방식으로 보내버린다.\r\n      })\r\n      .then(res=>res.json())\r\n      .then(data=>{\r\n        console.log(data);\r\n      });\r\n    this.props.history1.push(`/game_ready/${roomID}`);\r\n  }\r\n  // 1 증가\r\n  onClick2 = ()=>{\r\n    if(this.state.name!=='죄수의 딜레마' && this.state.max_number!==20){\r\n      this.setState({\r\n        max_number : this.state.max_number+1,\r\n      });\r\n    }\r\n  }\r\n  // 1 감소\r\n  onClick3 = ()=>{\r\n    if(this.state.name!=='죄수의 딜레마' && this.state.max_number!==3){\r\n      this.setState({\r\n        max_number : this.state.max_number-1,\r\n      })\r\n    }\r\n  }\r\n  onClick4 = e=>{\r\n    this.setState({\r\n      name : e.target.name,\r\n    });\r\n  }\r\n  onClick5 = value =>{\r\n    this.setState({\r\n      isPublic : value,\r\n    });\r\n  }\r\n  render(){\r\n    return(\r\n      <div className='generate_room'>\r\n        <div className=\"game_select\">\r\n          <button className={this.state.name===\"죄수의 딜레마\" ? \"select\" : \"\"}\r\n            name=\"죄수의 딜레마\" onClick={this.onClick4}>죄수의 딜레마</button>\r\n          <button className={this.state.name===\"외로운 영웅\" ? \"select\" : \"\"}\r\n            name=\"외로운 영웅\" onClick={this.onClick4}>외로운 영웅</button>\r\n          <button className={this.state.name===\"보물선\" ? \"select\" : \"\"}\r\n            name=\"보물선\" onClick={this.onClick4}>보물선</button>\r\n          <button className={this.state.name===\"거꾸로 경매\" ? \"select\" : \"\"}\r\n            name=\"거꾸로 경매\" onClick={this.onClick4}>거꾸로 경매</button>\r\n        </div>\r\n        <div className=\"max_select\">\r\n          <button className=\"circle\" onClick={this.onClick3}>-</button>\r\n          <button>{this.state.name==='죄수의 딜레마' ? \"2인\" : this.state.max_number+'인'}</button>\r\n          <button className=\"circle\" onClick={this.onClick2}>+</button>\r\n          <button className={this.state.isPublic ? \"select\" : \"\"} onClick={()=>this.onClick5(true)}>공개</button>\r\n          <button className={this.state.isPublic ? \"\" : \"select\"} onClick={()=>this.onClick5(false)}>비공개</button>\r\n          <button onClick={this.onClick1}>방 생성</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    is_logined : state.login.is_logined,\r\n    user_info : state.login.user_info,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Generate_room);\r\n","C:\\psychology\\src\\actions\\index.js",[],"C:\\psychology\\src\\components\\game_ready.js",["126","127","128","129","130"],"import React, {Component} from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport './css/game_ready.css';\r\nimport socketIOClient from 'socket.io-client';\r\nconst moment = require('moment-timezone');\r\nvar socket = socketIOClient();\r\n\r\nclass Game_ready extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      user_list : [],\r\n      chat_list : [],\r\n      room_name : '',\r\n      max_number : '',\r\n    }\r\n  }\r\n  makeScrollTop = ()=>{\r\n    var target = document.getElementsByClassName('chatting')[0];\r\n    target.scrollTop = target.scrollHeight;\r\n  }\r\n  componentDidMount = () => {\r\n    const roomID = this.props.match.params.roomID;\r\n    // get roomInfo\r\n    fetch(`/room/id/${roomID}`)\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n      console.log(data);\r\n      this.setState({\r\n        room_name : data.gameName,\r\n        max_number : data.maxNumber,\r\n        user_list : data.userList,\r\n        roomOwner : data.roomOwner,\r\n      });\r\n      // alert someone joined room\r\n      socket.emit('join room', {\r\n        roomID : roomID,\r\n        userID : this.props.user_info.name,\r\n        isOwner : data.roomOwner===this.props.user_info.name,\r\n      });\r\n    });\r\n    // new user entered\r\n    socket.on('new user', (data)=>{\r\n      var _chatlist = this.state.chat_list;\r\n      _chatlist.push({isAlert : true, userID : '', message : `${data.userID}님이 입장했습니다.`, time : Date.now()});\r\n\r\n      var _userlist = this.state.user_list;\r\n      if(this.state.roomOwner!==this.props.user_info.name){\r\n        _userlist.push({userID : data.userID});\r\n      }\r\n      this.setState({\r\n        user_list : _userlist,\r\n        chat_list : _chatlist,\r\n      });\r\n    });\r\n\r\n    socket.on('new message', (data)=>{\r\n      var _chatlist = this.state.chat_list;\r\n      _chatlist.push(data);\r\n      this.setState({\r\n        chat_list : _chatlist,\r\n      });\r\n      var target = document.getElementsByClassName('chatting')[0];\r\n      this.makeScrollTop();\r\n    });\r\n\r\n    socket.on('delete user', (data)=>{\r\n      var _userlist = this.state.user_list;\r\n      _userlist.splice(_userlist.indexOf(data.userID), 1);\r\n      var _chatlist = this.state.chat_list;\r\n      _chatlist.push({isAlert : true, userID : '', message : `${data.userID}님이 방을 나가셨습니다.`});\r\n      this.setState({\r\n        user_list : _userlist,\r\n        chat_list : _chatlist,\r\n      });\r\n    });\r\n  }\r\n  onChange = e=>{\r\n    this.setState({\r\n      [e.target.name] : e.target.value,\r\n    });\r\n  }\r\n  onKeyDown = e=>{\r\n    if(e.key==='Enter'){\r\n      this.onClick1();\r\n      //this.makeScrollTop();\r\n    }\r\n  }\r\n  onClick1 = e =>{\r\n    if(this.state.chatting){\r\n      socket.emit('send message', {roomID : this.props.match.params.roomID, userID : this.props.user_info.name, message : this.state.chatting});\r\n    }\r\n    document.getElementById('chat').value = null;\r\n    this.setState({chatting : null});\r\n  }\r\n  onClick2 = e=>{\r\n    socket.emit('exit room', {roomID : this.props.match.params.roomID, userID : this.props.user_info.name});\r\n    this.props.history.push('/public_room_list');\r\n  }\r\n  onClick3 = e=>{\r\n    var link_list =\r\n    this.props.gameStart(this.state.room_name, this.props.match.params.roomID, [this.props.user_info.name]);\r\n    switch(this.state.room_name){\r\n      case '외로운 영웅' :\r\n        this.props.history.push('/hero');\r\n        break;\r\n      case '보물선' :\r\n        this.props.history.push('/treasure_ship');\r\n        break;\r\n      default :\r\n        this.props.history.push('/main');\r\n        break;\r\n    }\r\n  }\r\n  render(){\r\n    const {user_list, chat_list} = this.state;\r\n    var users = [];\r\n    if(user_list){\r\n      for(var i=0;i<user_list.length;i++){\r\n        users.push(\r\n          <div>{user_list[i].userID}</div>\r\n        )\r\n      }\r\n    }\r\n    var chat = [];\r\n    if(chat_list){\r\n      for(var i=0;i<chat_list.length;i++){\r\n        const time = moment.tz(chat_list[i].time, \"Asia/Seoul\").format('A h:mm');\r\n        // if it is announcement\r\n        if(chat_list[i].isAlert){\r\n          chat.push(<div className=\"alert\">{chat_list[i].message}</div>);\r\n        }\r\n        // if it was written by myself\r\n        else if(chat_list[i].userID===this.props.user_info.name){\r\n          chat.push(\r\n            <div className=\"mychat\">\r\n              <span>{time}</span>\r\n              <span>{chat_list[i].message}</span>\r\n            </div>\r\n          );\r\n        }\r\n        // else\r\n        else {\r\n          chat.push(\r\n            <div className=\"chat\">\r\n              <span>[{chat_list[i].userID}]</span>\r\n              <span> : {chat_list[i].message}</span>\r\n              <span>{time}</span>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    return(\r\n      <div className = 'game_ready'>\r\n        <div className=\"row1\">\r\n          <div className=\"dummy1\"></div>\r\n          <div className=\"info\">\r\n          <span>대기실</span>\r\n          <span>{this.state.room_name}</span>\r\n          <span>{user_list.length}/{this.state.max_number}인</span>\r\n          </div>\r\n          <div className=\"dummy2\"></div>\r\n        </div>\r\n        <div className=\"row2\">\r\n          <div className=\"user_container\">\r\n           <div>참여자 목록</div>\r\n           {users}\r\n          </div>\r\n          <div className=\"chatting_container\">\r\n            <div className=\"chatting\">\r\n              {chat}\r\n            </div>\r\n            <div className=\"chatting_input\">\r\n              <input id=\"chat\" type=\"text\" name=\"chatting\" required onChange={this.onChange} onKeyDown={this.onKeyDown}/>\r\n              <button className={this.state.chatting ? \"active\" : \"nonactivate\"} type=\"submit\" onClick={this.onClick1}>전송</button>\r\n            </div>\r\n            <div className=\"button_container\">\r\n              <button onClick={this.onClick2}>나가기</button>\r\n              <button onClick={this.onClick3}>게임 시작</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"dummy\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    is_logined : state.login.is_logined,\r\n    user_info : state.login.user_info,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  //return bindActionCreators(actions, dispatch);\r\n  return{\r\n    gameStart : (name, roomID, user_list)=>{dispatch(actions.game_started(name, roomID, user_list))},\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game_ready);\r\n","C:\\psychology\\src\\components\\public_room.js",["131","132","133"],"import React, {Component} from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport './css/public_room.css';\r\n\r\nclass Public_room extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {data, onClick} = this.props;\r\n    return(\r\n      <div className=\"public_room\">\r\n        <div>\r\n          <img src=\"./assets/2.jpg\"/>\r\n          <div>\r\n            <span className=\"name\">{data.gameName}</span>\r\n            <span className=\"number\">{data.userList.length}/{data.maxNumber}명</span>\r\n            <br/>\r\n            <span>그 외 세부정보</span>\r\n          </div>\r\n        </div>\r\n        <button name={data.roomID}\r\n        onClick={onClick}>참가</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Public_room;\r\n","C:\\psychology\\src\\components\\game_container.js",["134","135","136"],"import React, {Component} from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport './css/game_container.css';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions';\r\nclass Game_container extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n  onClick = e=>{\r\n    this.props.gameStart(this.props.name);\r\n    this.props.history.push(this.props.link);\r\n  }\r\n  render(){\r\n    return(\r\n      <div className={'game_container'+(this.props.center ? ' center' : '')}>\r\n        <img src=\"./assets/2.jpg\"/>\r\n        <div className=\"status\">{this.props.name}</div>\r\n        <div>\r\n          <button onClick={this.onClick}>빠른 시작</button>\r\n          <button>게임 방법</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user_info : state.login.user_info,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  //return bindActionCreators(actions, dispatch);\r\n  return{\r\n    gameStart : (name)=>{dispatch(actions.game_started(name, null, null))},\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game_container);\r\n","C:\\psychology\\src\\components\\moving_dots\\moving_dots.js",["137","138","139","140","141","142","143","144","145","146","147"],"import React, {createRef, useEffect, useState, Component} from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport Timer from '../common/timer';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../actions';\r\nimport '../css/moving_dots.css';\r\n\r\nfunction Moving_dots(props){\r\n  let canvas;\r\n  let canvasRef = createRef();\r\n  const height = 800;\r\n  const width = 1800;\r\n  let pos = {\r\n    drawable : false,\r\n    X : Math.random()*width,\r\n    Y : Math.random()*height,\r\n  };\r\n  let origin = {\r\n    X : Math.random()*width,\r\n    Y : Math.random()*height,\r\n  };\r\n  let ctx;\r\n\r\n  //------------game status---------------------//\r\n  // game state : ready, timerRun, updateDots, showCluster, gameResult\r\n  let gameState = \"ready\";\r\n  // decide whether dots should be shown\r\n  let showDots = false;\r\n  // which round it is : 0~8\r\n  let round = 0;\r\n  // distance which dots will move\r\n  let length = [100, 120, 140, 200, 250, 200, 140, 120, 100];\r\n  // whether timer should run\r\n  const [timer, setTimer] = useState(false);\r\n  // define works after 10 sec\r\n  let timer1;\r\n  // define background messages\r\n  let backgroundMsg;\r\n  // set other dots' positions {X : .., Y : ..}\r\n  let positions = [];\r\n\r\n  useEffect(()=>{\r\n    //---------initialize----------------------------//\r\n    // canvas initialize\r\n    canvas = canvasRef.current;\r\n    ctx = canvas.getContext(\"2d\");\r\n    ctx.fillStyle = \"#384050\";\r\n    ctx.fillRect(0,0,canvas.width, canvas.height);\r\n    // draw background text\r\n    backgroundMsg = \"Ready\";\r\n    setBackgroundMsg(backgroundMsg);\r\n    // draw positions of other Moving_dots\r\n    setPositions();\r\n    //---------initialize done----------------------------//\r\n    // countDown\r\n    setTimeout(()=>{\r\n      clearCanvas();\r\n      backgroundMsg = \"3\";\r\n      setBackgroundMsg(backgroundMsg);\r\n    }, 1000);\r\n    setTimeout(()=>{\r\n      clearCanvas();\r\n      backgroundMsg = \"2\";\r\n      setBackgroundMsg(backgroundMsg);\r\n    }, 2000);\r\n    setTimeout(()=>{\r\n      clearCanvas();\r\n      backgroundMsg = \"1\";\r\n      setBackgroundMsg(backgroundMsg);\r\n    }, 3000);\r\n    setTimeout(()=>{\r\n      clearCanvas();\r\n      backgroundMsg = \"Round 1\";\r\n      setBackgroundMsg(backgroundMsg);\r\n      drawDots();\r\n      showDots = true;\r\n      setTimer(true);\r\n      gameState = \"timerRun\";\r\n    }, 4000);\r\n    timer1 = setTimeout(()=>{\r\n      var e = {offsetX : Math.random()*width, offsetY : Math.random()*height};\r\n      initDraw(e);\r\n    }, 14000);\r\n    // evenlistener\r\n    canvas.addEventListener(\"mousedown\", initDraw);\r\n    canvas.addEventListener(\"mousemove\", draw);\r\n  }, []);\r\n\r\n  function setBackgroundMsg(msg){\r\n    // draw background text\r\n    ctx.beginPath();\r\n    ctx.textAlign = \"center\";\r\n    ctx.font = \"150px Arial\";\r\n    ctx.fillStyle = \"rgba(112, 112, 112, 1)\";\r\n    ctx.fillText(msg, width/2, height/2);\r\n    ctx.stroke();\r\n  }\r\n\r\n  function initDraw(e){\r\n    if(gameState===\"timerRun\"){\r\n      // game is end\r\n      if(round===8){\r\n        // set new origin\r\n        pos = {...pos, ...getPosition(e)};\r\n        const d_x = pos.X-origin.X;\r\n        const d_y = pos.Y-origin.Y;\r\n        const _r = Math.sqrt(d_x*d_x+d_y*d_y);\r\n        const len_x = length[round]*d_x/_r;\r\n        const len_y = length[round]*d_y/_r;\r\n        var end_x = len_x+origin.X;\r\n        var end_y = len_y+origin.Y;\r\n        if(end_x<0) end_x = width+end_x;\r\n        if(end_x>width) end_x = end_x-width;\r\n        if(end_y<0) end_y = height+end_y;\r\n        if(end_y>height) end_y = end_y-height;\r\n        origin = {X : end_x, Y : end_y};\r\n        //--------------------- game status update ----------------------//\r\n        gameState = \"gameResult\";\r\n        // timer stop\r\n        setTimer(false);\r\n        // canvas update\r\n        backgroundMsg = \"Game End\";\r\n        draw(e);\r\n      }\r\n      // round is not yet 9\r\n      else{\r\n        // set new origin\r\n        pos = {...pos, ...getPosition(e)};\r\n        const d_x = pos.X-origin.X;\r\n        const d_y = pos.Y-origin.Y;\r\n        const _r = Math.sqrt(d_x*d_x+d_y*d_y);\r\n        const len_x = length[round]*d_x/_r;\r\n        const len_y = length[round]*d_y/_r;\r\n        var end_x = len_x+origin.X;\r\n        var end_y = len_y+origin.Y;\r\n        if(end_x<0) end_x = width+end_x;\r\n        if(end_x>width) end_x = end_x-width;\r\n        if(end_y<0) end_y = height+end_y;\r\n        if(end_y>height) end_y = end_y-height;\r\n        origin = {X : end_x, Y : end_y};\r\n        //--------------------- game status update ----------------------//\r\n        gameState = \"updateDots\";\r\n        // timer stop\r\n        setTimer(false);\r\n        // round ++\r\n        round++;\r\n        // canvas update\r\n        backgroundMsg = \"moving dots\";\r\n        draw(e);\r\n\r\n        // after 1sec, update dots position and canvas\r\n        setTimeout(()=>{\r\n          updatePositions();\r\n          draw(e);\r\n\r\n        }, 1000);\r\n\r\n        // after 2 sec, new round start\r\n        setTimeout(()=>{\r\n          gameState= \"timerRun\";\r\n          backgroundMsg = \"Round \"+(round+1);\r\n          draw(e);\r\n          setTimer(true);\r\n        }, 2000);\r\n\r\n        // after 10sec initDraw\r\n        clearInterval(timer1);\r\n        timer1 = setTimeout(()=>{\r\n          var e = {offsetX : Math.random()*width, offsetY : Math.random()*height};\r\n          initDraw(e);\r\n        }, 12000);\r\n      }\r\n    }\r\n  }\r\n\r\n  function setPositions(){\r\n    for(var i=0;i<20;i++){\r\n      positions.push({X : Math.random()*width, Y : Math.random()*height});\r\n    }\r\n  }\r\n\r\n  function updatePositions(){\r\n    for(var i=0;i<20;i++){\r\n      positions[i].X = positions[i].X+(2*Math.random()-1)*length[round];\r\n      positions[i].Y = positions[i].Y+(2*Math.random()-1)*length[round];\r\n    }\r\n  }\r\n\r\n  function drawDots(){\r\n    for(var i=0;i<20;i++){\r\n      ctx.beginPath();\r\n      ctx.arc(positions[i].X, positions[i].Y, 10, 0, 2*Math.PI, true);\r\n      ctx.fillStyle=\"#FFCF24\";\r\n      ctx.fill();\r\n    }\r\n  }\r\n\r\n  function draw(e){\r\n    // claer canvas\r\n    clearCanvas();\r\n    // draw background text\r\n    setBackgroundMsg(backgroundMsg);\r\n    // draw other dots\r\n    if(showDots) drawDots();\r\n    // draw mydot\r\n    ctx.beginPath();\r\n    ctx.arc(origin.X, origin.Y, 10, 0, 2*Math.PI, true);\r\n    ctx.fillStyle=\"#56AEFF\";\r\n    ctx.fill();\r\n    // draw support line\r\n    drawSupportLine(origin, getPosition(e));\r\n  }\r\n\r\n  function getPosition(e){\r\n    return {X: e.offsetX, Y: e.offsetY};\r\n  }\r\n\r\n  function clearCanvas(){\r\n    // canvas reset\r\n    ctx.clearRect(0,0,canvas.width, canvas.height);\r\n    ctx.fillStyle = \"#384050\";\r\n    ctx.fillRect(0,0,canvas.width, canvas.height);\r\n  }\r\n\r\n  function drawSupportLine(_origin, _pos){\r\n    // draw line to origin to pos\r\n    //ctx.beginPath();\r\n    //ctx.moveTo(_origin.X, _origin.Y);\r\n    const d_x = _pos.X-_origin.X;\r\n    const d_y = _pos.Y-_origin.Y;\r\n    const _r = Math.sqrt(d_x*d_x+d_y*d_y);\r\n    const len_x = length[round]*d_x/_r;\r\n    const len_y = length[round]*d_y/_r;\r\n    var end_x = len_x+_origin.X;\r\n    var end_y = len_y+_origin.Y;\r\n    if(end_x<0) end_x = width+end_x;\r\n    if(end_x>width) end_x = end_x-width;\r\n    if(end_y<0) end_y = height+end_y;\r\n    if(end_y>height) end_y = end_y-height;\r\n    //ctx.lineTo(end_x, end_y);\r\n    //ctx.stroke();\r\n    // draw circle at pos\r\n    ctx.beginPath();\r\n    ctx.arc(end_x, end_y, 10, 0, 2*Math.PI, true);\r\n    ctx.fillStyle=\"rgba(86, 174, 255, 0.5)\";\r\n    ctx.fill();\r\n  }\r\n\r\n  function onClick1(){\r\n    props.gameEnd();\r\n    props.history.push('/');\r\n  }\r\n\r\n  return(\r\n    <div className=\"moving_dots\">\r\n      <Timer start={timer} time={10000} width={width}/>\r\n      <canvas ref={canvasRef} width={width} height={height}/>\r\n      <button onClick={onClick1}>게임 포기</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user_info : state.login.user_info,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  //return bindActionCreators(actions, dispatch);\r\n  return{\r\n    gameEnd : ()=>{dispatch(actions.game_ended())},\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Moving_dots);\r\n","C:\\psychology\\src\\reducers\\game.js",[],"C:\\psychology\\src\\components\\common\\timer.js",["148","149","150","151"],"import React, {createRef, useEffect, Component} from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\n\r\nclass Timer extends Component{\r\n  constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n      this.timer = 0;\r\n      this.state = {\r\n        count : 0,\r\n      };\r\n    }\r\n  componentDidMount = ()=>{\r\n    var canvas = this.canvasRef.current;\r\n    var ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.fillStyle = \"#FFCF24\";\r\n    ctx.fillRect(0,0,canvas.width, canvas.height);\r\n    if(this.props.start) this.timer = setInterval(this.draw, 10);\r\n  }\r\n  componentWillReceiveProps = (nextProps)=>{\r\n    if(nextProps.start) {\r\n      this.timer = setInterval(this.draw, 10);\r\n      this.setState({count : 0});\r\n    }\r\n  }\r\n  componentWillUnmount = ()=>{\r\n    clearInterval(this.timer);\r\n  }\r\n  draw = ()=>{\r\n    var canvas = this.canvasRef.current;\r\n    var ctx = canvas.getContext('2d');\r\n\r\n    // count time\r\n    this.setState({\r\n      count : this.state.count+1,\r\n    });\r\n\r\n    // check timer is done\r\n    var ratio = this.state.count*10/this.props.time;\r\n    if(ratio>=1) {\r\n      clearInterval(this.timer);\r\n      this.setState({count : 0});\r\n      ctx.fillStyle = \"#FFCF24\";\r\n      ctx.fillRect(0,0,canvas.width, canvas.height);\r\n    }\r\n\r\n    // time bar update\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.fillStyle = \"#FFCF24\";\r\n    ctx.fillRect(0,0,canvas.width*(1-ratio), canvas.height);\r\n\r\n    // check it's stopped\r\n    if(!this.props.start){\r\n      clearInterval(this.timer);\r\n      this.setState({count : 0});\r\n      ctx.fillStyle = \"#FFCF24\";\r\n      ctx.fillRect(0,0,canvas.width, canvas.height);\r\n    }\r\n  }\r\n  render(){\r\n    return (\r\n      <>\r\n        <canvas ref={this.canvasRef} width={this.props.width} height=\"20\"/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Timer;\r\n","C:\\psychology\\src\\components\\treasure_ship\\treasure_ship.js",["152","153","154"],"import React, {Component} from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport '../css/treasure_ship.css';\r\n\r\nclass Treasure_ship extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className='treasure_ship'>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Treasure_ship;\r\n","C:\\psychology\\src\\components\\treasure_ship\\ship_wreck.js",["155","156"],"/* Babylon JS is available as **npm** package.\r\nYou can easily build a simple `React` Component around a `canvas` and Babylon JS\r\nI have created a minimal example with React+ Babylon:\r\n */\r\nimport React, { Component } from \"react\";\r\nimport * as BABYLON from '@babylonjs/core/Legacy/legacy';\r\nimport 'babylonjs-loaders';\r\n\r\nvar scene;\r\nvar car;\r\n/**\r\n * Example temnplate of using Babylon JS with React\r\n */\r\nclass Ship_wreck extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { useWireFrame: false, shouldAnimate: false };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // start ENGINE\r\n    this.engine = new BABYLON.Engine(this.canvas, true, {doNotHandleContextLost: true});\r\n\r\n    this.engine.enableOfflineSupport = false;\r\n\r\n\r\n    BABYLON.DefaultLoadingScreen.prototype.displayLoadingUI = function () {\r\n      //alert('fuck');\r\n    }\r\n    //Create Scene\r\n    scene = new BABYLON.Scene(this.engine);\r\n\r\n    scene.clearCachedVertexData();\r\n\r\n    scene.cleanCachedTextureBuffer();\r\n\r\n    //--background settting---\r\n    this.setBackground();\r\n\r\n    //--Light---\r\n    this.addLight();\r\n\r\n    //--Camera---\r\n    this.addCamera();\r\n\r\n    //--Meshes---\r\n    this.addModels();\r\n\r\n    // Add Events\r\n    window.addEventListener(\"resize\", this.onWindowResize, false);\r\n\r\n    // Render Loop\r\n    this.engine.runRenderLoop(() => {\r\n      scene.render();\r\n    });\r\n\r\n    //Animation\r\n    scene.registerBeforeRender(() => {\r\n\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.onWindowResize, false);\r\n  }\r\n\r\n  onWindowResize = event => {\r\n    this.engine.resize();\r\n  };\r\n\r\n  setBackground = ()=>{\r\n    scene.clearColor = new BABYLON.Color3(34/256, 43/256, 61/256);\r\n  }\r\n\r\n  /**\r\n   * Add Lights\r\n   */\r\n  addLight = () => {\r\n    //---------- LIGHT---------------------\r\n    // Create a basic light, aiming 0,1,0 - meaning, to the sky.\r\n    var light = new BABYLON.HemisphericLight(\r\n      \"light1\",\r\n      new BABYLON.Vector3(0, 10, 0),\r\n      scene\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Add Camera\r\n   */\r\n  addCamera = () => {\r\n    // ---------------ArcRotateCamera or Orbit Control----------\r\n    var camera = new BABYLON.ArcRotateCamera(\r\n      \"Camera\",\r\n      Math.PI / 2,\r\n      Math.PI / 4,\r\n      4,\r\n      BABYLON.Vector3.Zero(),\r\n      scene\r\n    );\r\n    camera.inertia = 0;\r\n    camera.angularSensibilityX = 250;\r\n    camera.angularSensibilityY = 250;\r\n\r\n    // This attaches the camera to the canvas\r\n    camera.attachControl(this.canvas, true);\r\n    camera.setPosition(new BABYLON.Vector3(5, 5, 5));\r\n  };\r\n\r\n\r\n  /**\r\n   * Add Models\r\n   */\r\n  addModels = () => {\r\n    // Add BOX\r\n\r\n    car = BABYLON.SceneLoader.Append(\"./assets/OBJ/\", \"ship_light.obj\", scene, function(scene){\r\n      for(var i=0;i<scene.meshes.length;i++){\r\n        scene.meshes[i].scaling = scene.meshes[i].scaling.multiply(new BABYLON.Vector3(0.06, 0.06, 0.06));\r\n        scene.meshes[i].position.y += -1;\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <canvas className=\"ship_wreck\"\r\n        style={{ width: this.props.width, height: this.props.height }}\r\n        ref={canvas => {\r\n          this.canvas = canvas;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Ship_wreck;\r\n",["157","158"],"C:\\psychology\\src\\components\\hero\\hero.js",["159","160","161","162"],"import React, {Component} from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport '../css/hero.css';\r\nimport Timer from '../common/timer';\r\nimport socketIOClient from 'socket.io-client';\r\nvar socket = socketIOClient();\r\n\r\nclass Hero extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n  componentDidMount = ()=>{\r\n  }\r\n  render(){\r\n    return(\r\n      <div className='hero'>\r\n        <div className=\"row1\">\r\n          <Timer start={false} width={1000} time={10000}/>\r\n          <div className=\"hero_button\">\r\n            <button>영웅 출현</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row2\">\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Hero;\r\n",{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":2,"column":25,"nodeType":"169","messageId":"170","endLine":2,"endColumn":29},{"ruleId":"167","severity":1,"message":"171","line":20,"column":11,"nodeType":"169","messageId":"170","endLine":20,"endColumn":17},{"ruleId":"167","severity":1,"message":"172","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"173","severity":1,"message":"174","line":34,"column":37,"nodeType":"175","endLine":34,"endColumn":83},{"ruleId":"173","severity":1,"message":"176","line":37,"column":11,"nodeType":"175","endLine":37,"endColumn":115},{"ruleId":"173","severity":1,"message":"176","line":38,"column":11,"nodeType":"175","endLine":38,"endColumn":114},{"ruleId":"173","severity":1,"message":"176","line":39,"column":11,"nodeType":"175","endLine":39,"endColumn":116},{"ruleId":"173","severity":1,"message":"176","line":40,"column":11,"nodeType":"175","endLine":40,"endColumn":111},{"ruleId":"173","severity":1,"message":"176","line":41,"column":11,"nodeType":"175","endLine":41,"endColumn":116},{"ruleId":"173","severity":1,"message":"176","line":42,"column":11,"nodeType":"175","endLine":42,"endColumn":118},{"ruleId":"167","severity":1,"message":"172","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":21},{"ruleId":"167","severity":1,"message":"172","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"172","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":21},{"ruleId":"167","severity":1,"message":"177","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":21},{"ruleId":"173","severity":1,"message":"178","line":38,"column":54,"nodeType":"175","endLine":38,"endColumn":112},{"ruleId":"167","severity":1,"message":"172","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":21},{"ruleId":"167","severity":1,"message":"172","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":21},{"ruleId":"167","severity":1,"message":"179","line":65,"column":11,"nodeType":"169","messageId":"170","endLine":65,"endColumn":17},{"ruleId":"167","severity":1,"message":"180","line":103,"column":9,"nodeType":"169","messageId":"170","endLine":103,"endColumn":18},{"ruleId":"181","severity":1,"message":"182","line":129,"column":15,"nodeType":"169","messageId":"183","endLine":129,"endColumn":16},{"ruleId":"167","severity":1,"message":"172","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":21},{"ruleId":"184","severity":1,"message":"185","line":17,"column":11,"nodeType":"175","endLine":17,"endColumn":38},{"ruleId":"167","severity":1,"message":"172","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":21},{"ruleId":"184","severity":1,"message":"185","line":19,"column":9,"nodeType":"175","endLine":19,"endColumn":36},{"ruleId":"167","severity":1,"message":"186","line":1,"column":48,"nodeType":"169","messageId":"170","endLine":1,"endColumn":57},{"ruleId":"167","severity":1,"message":"172","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":45,"column":14,"nodeType":"189","endLine":45,"endColumn":31},{"ruleId":"187","severity":1,"message":"190","line":46,"column":11,"nodeType":"191","endLine":46,"endColumn":34},{"ruleId":"187","severity":1,"message":"192","line":50,"column":21,"nodeType":"193","endLine":50,"endColumn":28},{"ruleId":"187","severity":1,"message":"194","line":76,"column":18,"nodeType":"193","endLine":76,"endColumn":22},{"ruleId":"187","severity":1,"message":"195","line":78,"column":19,"nodeType":"193","endLine":78,"endColumn":29},{"ruleId":"187","severity":1,"message":"196","line":80,"column":14,"nodeType":"191","endLine":83,"endColumn":14},{"ruleId":"181","severity":1,"message":"197","line":134,"column":13,"nodeType":"169","messageId":"183","endLine":134,"endColumn":18},{"ruleId":"181","severity":1,"message":"198","line":135,"column":13,"nodeType":"169","messageId":"183","endLine":135,"endColumn":18},{"ruleId":"167","severity":1,"message":"199","line":1,"column":16,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"200","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"172","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":21},{"ruleId":"167","severity":1,"message":"172","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":21},{"ruleId":"167","severity":1,"message":"201","line":3,"column":9,"nodeType":"169","messageId":"170","endLine":3,"endColumn":16},{"ruleId":"167","severity":1,"message":"202","line":81,"column":9,"nodeType":"169","messageId":"170","endLine":81,"endColumn":14},{"ruleId":"167","severity":1,"message":"203","line":117,"column":5,"nodeType":"169","messageId":"170","endLine":117,"endColumn":8},{"ruleId":"163","replacedBy":"204"},{"ruleId":"165","replacedBy":"205"},{"ruleId":"167","severity":1,"message":"172","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":21},{"ruleId":"167","severity":1,"message":"201","line":3,"column":9,"nodeType":"169","messageId":"170","endLine":3,"endColumn":16},{"ruleId":"167","severity":1,"message":"206","line":7,"column":5,"nodeType":"169","messageId":"170","endLine":7,"endColumn":11},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'mobile' is assigned a value but never used.","'Route' is defined but never used.","react/jsx-pascal-case","Imported JSX component Generate_room must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Game_container must be in PascalCase or SCREAMING_SNAKE_CASE","'Generate_room' is defined but never used.","Imported JSX component Public_room must be in PascalCase or SCREAMING_SNAKE_CASE","'target' is assigned a value but never used.","'link_list' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Component' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'canvas' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'ctx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'backgroundMsg' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Assignments to the 'showDots' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'gameState' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'timer1' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'end_x' is already defined.","'end_y' is already defined.","'createRef' is defined but never used.","'useEffect' is defined but never used.","'connect' is defined but never used.","'light' is assigned a value but never used.","'car' is assigned a value but never used.",["207"],["208"],"'socket' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]